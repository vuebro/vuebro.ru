{"script":"import { inject } from \"vue\";\nconst { id } = defineProps([\"id\"]);\nconst pages = inject(\"pages\");\nconst the = pages[id];\n\nconst code = `...\n<!-- Точка, куда монтируется дерево рубрик -->\n<router-view />\n...`;\nconst inj = `/** Импортируется вычислитель и инжектор */\nimport { computed, inject } from \"vue\";\nconst pages = inject(\"pages\");\n/** Инжектирование id выбранной страницы */\nconst selId = inject(\"id\");\n/** Вычисление семантического объекта выбранной страницы */\nconst sel = computed(() => pages[selId.value]);`;","style":"","template":"<div class=\"container mx-auto px-4\">\n  <div class=\"flex flex-col text-center not-prose\">\n    <icon :icon=\"the.icon\" class=\"size-20 mx-auto\"></icon>\n    <h2 class=\"text-4xl my-5 font-['Caveat']\">{{ the.title }}</h2>\n    <el-text size=\"large\">{{ the.description }}</el-text>\n  </div>\n    <h3>Дерево рубрик</h3>\n    <p class=\"text-justify\">Страницы в веб-редакторе veuS3 организованы в виде дерева, которым можно управлять напрямую\n        в\n        редакторе. Можно\n        создавать страницы, удалять, переименовывать, изменять их семантику и наполнение. Неизменным остается лишь\n        корень дерева, \"корневая страница\". Она присутствует в любом сайте, сделанном на vueS3 и её нельзя удалить. Эта\n        страница имеет ключевую роль в построении шаблона сайта и навигации по сайту. Также, хорошей идеей является\n        подключение сторонних модулей и фреймворков именно к корневой странице, если таковые используются на большинстве\n        страниц вашего сайта, подробности: <router-link to=\"/документация/модули/\">документация/модули</router-link>.\n    </p>\n    <p class=\"text-justify\">Для навигации по сайту в veuS3 используется <a href=\"https://vue-router-ru.netlify.app\"\n            target=\"_blank\" rel=\"noopener noreferrer\">Vue Router</a>, именно он управляет тем, какая страница сайта\n        отображается. Таким образом, чтобы обеспечить отображение текущей страницы, надо\n        на корневую страницу, в шаблон добавить таг &lt;router-view /&gt;:\n    </p>\n    <highlightjs :code=\"code\" class=\"not-prose\"></highlightjs>\n    <p class=\"text-justify\">В итоге, мы получаем корневую страницу, куда, в точку определенную вами, монтируется дерево\n        рубрик. На большинстве сайтов используются также следующие элементы:</p>\n    <ul>\n        <li>Заголовок (хидер) сайта</li>\n        <li>Подвал (футер) сайта</li>\n    </ul>\n    <p class=\"text-justify\">Кроме того, зачастую используются элементы навигации, типа меню сайта и различных баров. Все\n        эти\n        элементы постоянно\n        отображаются на сайте либо временно находятся в скрытом состоянии, чтобы быть отображенными по первому\n        требованию. Разумно их размещать именно на корневой странице. Простой пример, как это реализовано, можно увидеть\n        по ссылке: <router-link to=\"/документация/старт/\">документация/старт</router-link>.</p>\n    <h3>Семантический объект выбранной страницы</h3>\n    <p class=\"text-justify\">Особенно стоит отметить, что на корневой странице востребован семантический объект\n        выбранной страницы:</p>\n    <highlightjs class=\"not-prose\" language=\"js\" :code=\"inj\"></highlightjs>\n    <p class=\"text-justify\">Он незаменим в случаях, когда нужно отобразить информацию о выбранной странице, например,\n        выделить выбранную страницу в вашем меню. Подробности: <router-link\n            to=\"/документация/семантика/\">документация/семантика</router-link>.</p>\n</div>"}